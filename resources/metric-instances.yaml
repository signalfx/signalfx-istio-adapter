---
# Source: signalfx-adapter/templates/metric-instances.yaml
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestcount
  namespace: istio-system
spec:
  template: metric
  params:
    value: "1"
    dimensions:
      connection_mtls: connection.mtls | false
      destination_app: destination.labels["app"] | "unknown"
      destination_namespace: destination.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client",
        "server")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      source_app: source.labels["app"] | "unknown"
      source_namespace: source.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestduration
  namespace: istio-system
spec:
  template: metric
  params:
    value: response.duration | "0ms"
    dimensions:
      connection_mtls: connection.mtls | false
      destination_app: destination.labels["app"] | "unknown"
      destination_namespace: destination.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client",
        "server")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      source_app: source.labels["app"] | "unknown"
      source_namespace: source.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: requestsize
  namespace: istio-system
spec:
  template: metric
  params:
    value: request.size | 0
    dimensions:
      connection_mtls: connection.mtls | false
      destination_app: destination.labels["app"] | "unknown"
      destination_namespace: destination.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client",
        "server")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      source_app: source.labels["app"] | "unknown"
      source_namespace: source.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: responsesize
  namespace: istio-system
spec:
  template: metric
  params:
    value: response.size | 0
    dimensions:
      connection_mtls: connection.mtls | false
      destination_app: destination.labels["app"] | "unknown"
      destination_namespace: destination.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client",
        "server")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      source_app: source.labels["app"] | "unknown"
      source_namespace: source.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: tcpbytesent
  namespace: istio-system
spec:
  template: metric
  params:
    value: connection.sent.bytes | 0
    dimensions:
      connection_mtls: connection.mtls | false
      destination_app: destination.labels["app"] | "unknown"
      destination_namespace: destination.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client",
        "server")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      source_app: source.labels["app"] | "unknown"
      source_namespace: source.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: tcpbytereceived
  namespace: istio-system
spec:
  template: metric
  params:
    value: connection.received.bytes | 0
    dimensions:
      connection_mtls: connection.mtls | false
      destination_app: destination.labels["app"] | "unknown"
      destination_namespace: destination.namespace | "unknown"
      destination_principal: destination.principal | "unknown"
      destination_service: destination.service.host | "unknown"
      destination_service_name: destination.service.name | "unknown"
      destination_service_namespace: destination.service.namespace | "unknown"
      destination_version: destination.labels["version"] | "unknown"
      destination_workload: destination.workload.name | "unknown"
      destination_workload_namespace: destination.workload.namespace | "unknown"
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client",
        "server")
      request_protocol: api.protocol | context.protocol | "unknown"
      response_code: response.code | 200
      source_app: source.labels["app"] | "unknown"
      source_namespace: source.namespace | "unknown"
      source_principal: source.principal | "unknown"
      source_version: source.labels["version"] | "unknown"
      source_workload: source.workload.name | "unknown"
      source_workload_namespace: source.workload.namespace | "unknown"
    monitored_resource_type: '"UNSPECIFIED"'

